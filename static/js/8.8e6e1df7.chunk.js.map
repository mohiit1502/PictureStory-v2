{"version":3,"sources":["components/molecules/SideBar/SideBarTab/SideBarTab.jsx","components/molecules/SideBar/SideBarTab/index.js","components/molecules/SideBar/SideBar.jsx","components/molecules/SideBar/index.js","components/molecules/common/CommandPrompt/CommandAndUserTools/ToolItem/ToolItem.js","components/molecules/common/CommandPrompt/CommandAndUserTools/UserTools/UserTools.js","components/molecules/common/CommandPrompt/CommandAndUserTools/CommandAndUserTools.js","models/chatmessage.model.js","components/molecules/common/CommandPrompt/CommandPrompt.js","components/molecules/common/CommandPrompt/index.js","components/molecules/PrincipalContent/ImageViewer/ImageViewer.js","components/molecules/PrincipalContent/ImageViewer/index.js","components/molecules/PrincipalContent/PrincipalContent.js","components/molecules/common/Dropzone/Dropzone.js","components/molecules/common/Dropzone/index.js","components/molecules/common/Progress/index.js","components/molecules/common/Progress/Progress.js","components/molecules/common/Uploader/Uploader.js","components/molecules/ChatCard/ChatCard.js","components/molecules/ChatCard/index.js","components/molecules/ChatView/ChatView.js","pages/Home/Home.jsx","pages/Home/index.js","pages/Home/selectors.js","components/molecules/PrincipalContent/ImageContainer/Image/ImageHeader/ImageHeader.js","components/molecules/PrincipalContent/ImageContainer/Image/Image.js","components/molecules/PrincipalContent/ImageContainer/Image/index.js","components/molecules/PrincipalContent/ImageContainer/ImageContainer.js","components/molecules/PrincipalContent/ImageContainer/index.js"],"names":["SideBarTab","tab","className","activeClass","to","href","tabImage","tabText","subList","id","propTypes","PropTypes","object","SideBar","props","useEffect","$","on","css","removeClass","e","target","closest","length","addClass","tabsData","tabItems","map","index","key","type","onClick","currentX","split","toggleClass","array","ToolItem","toolData","useState","icon","setIcon","toggleIcon","event","iconTag","find","addBack","innerHTML","iconHovered","clickHandler","onMouseEnter","onMouseLeave","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","sectionDesktop","display","float","breakpoints","up","sectionMobile","mapDispatchToProps","uploaderModalStateDispatcher","uploadModalOpened","updateUploadModalState","connect","classes","React","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","currentTarget","handleMobileMenuClose","handleMenuClose","innerText","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","renderMobileMenu","IconButton","aria-label","color","Badge","badgeContent","aria-controls","aria-haspopup","style","width","height","top","position","right","edge","CommandAndUserTools","registerSpeechHandlers","bind","startSpeechRecognition","state","commandToolItemsData","save","reset","execute","this","test","navigator","userAgent","vendor","recognition","start","SpeechRecognition","instructions","window","mozSpeechRecognition","msSpeechRecognition","webkitSpeechRecognition","console","error","show","hide","onstart","val","onspeechend","onerror","onresult","noteContent","current","resultIndex","transcript","results","commandToolItems","Component","func","ChatMessage","message","isUser","timeStamp","Date","now","CommandPrompt","chatView","registerMouseAndKeyboardHandlers","showContextMenu","initiateDomOpsOnEnter","toggleChatView","executeCommand","timerId","delay","keyCode","which","clearTimeout","setTimeout","focus","contextMenuFirstDisplay","contextMenuDisplayed","inputField","value","selectionStart","selectionEnd","pageY","left","pageX","commandField","commandVal","dispatchMessage","setState","dispatchShowChatView","onDragEnd","xmlns","viewBox","transform","placeholder","name","onKeyUp","aria-labelledby","resetCommand","saveToFavorites","updateChatMessages","modal","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","polygon","fill","common","white","stroke","divider","strokeWidth","ImageViewer","Modal","aria-describedby","modalState","handleCloseDispatcher","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Zoom","in","Paper","elevation","bool","selectedImage","string","mapStateToProps","createPropsSelector","getModalState","getBackgroundImage","updateModalState","PrincipalContent","ImageContainer","Dropzone","hightlight","fileInputRef","createRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","disabled","click","evt","files","fileListToArray","list","i","push","item","preventDefault","dataTransfer","cursor","alt","src","ref","multiple","onChange","Progress","progress","Uploader","imageURI","uploading","uploadProgress","successfullUploaded","upload","sendRequest","renderActions","renderProgress","compressAndUploadFiles","compress","prevState","concat","file","percentage","opacity","uploadFile","forEach","then","result","Promise","resolve","reject","fileName","reader","FileReader","fileVariants","onload","img","Image","elem","document","createElement","ctx","getContext","drawImage","canvas","toBlob","blob1","File","lastModified","blob2","log","readAsDataURL","promises","all","catch","err","formData","FormData","append","fetch","method","body","response","json","jsonData","isRequired","getUploadModalState","withStyles","ChatCard","chat","join","text","ChatView","classes1","classes2","chats","chatCards","getChatViewStatus","Home","pageType","initializeHome","backgroundImage","actions","getHome","createSelector","data","dataState","pages","home","createGetSelector","getImages","ImageHeader","image","imageUrl","card","maxWidth","media","setImg","arrayBufferToBase64","buffer","binary","slice","call","Uint8Array","b","String","fromCharCode","btoa","Card","updateBackgroundDispatcher","CardHeader","avatar","title","textTransform","CardActionArea","CardMedia","CardContent","Typography","gutterBottom","variant","component","description","CardActions","Button","size","updateBackground","images","imageRenders"],"mappings":"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","file":"static/js/8.8e6e1df7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom'\n\nconst SideBarTab = ({tab}) => {\n  return (\n    <li className={`${tab.activeClass ? 'active' : ''} c-SideBarTab` }>\n      <Link to={tab.href}>\n        <i className={`fas ${tab.tabImage}`}></i>\n        <span className=\"hideable hide\">{tab.tabText}</span>\n      </Link>\n      {tab.subList && (<ul \n        className=\"collapse list-unstyled\" \n        id=\"pageSubmenu\">\n        <li>\n          <Link to=\"#\">Repo</Link>\n        </li>\n        <li>\n          <Link to=\"#\">Issues</Link>\n        </li>\n        <li>\n          <Link to=\"#\">Admin</Link>\n        </li>\n      </ul>)}\n    </li>\n  );\n};\n\nSideBarTab.propTypes = {\n  tab: PropTypes.object\n};\n\nexport default SideBarTab;","import SideBarTab from './SideBarTab.jsx';\n\nexport default SideBarTab;","import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport SideBarTab from './SideBarTab';\nimport $ from 'jquery'\n\nconst SideBar = props => {\n\n  useEffect(() => {\n    $('#sidebar.active > span').on('click', () => {\n      $('#sidebar').css('transform', 'translateX(85px)');\n      $('#sidebar').css('box-shadow', 'rgb(224, 151, 32) 10px 10px 30px');\n      $('.triangle').removeClass('animation');\n    });\n    $('*').on('click', (e) => {\n      // e.stopPropagation();\n      // console.log($(e.target).closest('#sidebar'))\n      if($(e.target).closest('#sidebar').length === 0) {\n        $('#sidebar').css('transform', 'translateX(0px)');\n        $('#sidebar').css('box-shadow', '');\n        $('.triangle').addClass('animation');\n      }\n    })\n  })\n\n  const toggleSidebar = () => {\n    const position = $('#sidebar').css('transform').split(/[()]/)[1]\n    const currentX = +position.split(',')[4]\n    if (currentX && currentX === 255) {\n      $('#sidebar').css('transform', 'translateX(85px)');\n    } else if (currentX && currentX === 85) {\n      $('#sidebar').css('transform', 'translateX(255px)');\n    }\n    $('#sidebar').toggleClass('active');\n    $('.hideable').toggleClass('hide');\n    // console.log(currentX)\n    // console.log($('#sidebar').css('transform'))\n    // console.log($('#sidebar').css('transform').split(/[()]/))\n    $('.triangle').addClass('animation');\n  }\n\n  const tabsData = [\n    {'href': 'homeSubmenu', 'tabImage': 'fa-home', 'tabText': 'Home', 'activeClass': true, 'subList': false},\n    {'href': 'about', 'tabImage': 'fa-briefcase', 'tabText': 'About', 'activeClass': false, 'subList': false},\n    {'href': 'pageSubmenu', 'tabImage': 'fa-copy', 'tabText': 'Tasks', 'activeClass': false, 'subList': true},\n    {'href': 'favorites', 'tabImage': 'fa-image', 'tabText': 'Favorites', 'activeClass': false, 'subList': false},\n    {'href': 'question', 'tabImage': 'fa-question', 'tabText': 'FAQ', 'activeClass': false, 'subList': false},\n    {'href': 'contact', 'tabImage': 'fa-paper-plane', 'tabText': 'Contact', 'activeClass': false, 'subList': false},\n  ]\n  const tabItems = tabsData && tabsData.map((tab, index) => {\n    return <SideBarTab tab={tab} key={index} />\n  })\n  return (\n    <nav id=\"sidebar\" className=\"c-SideBar active\">\n      <span className=\"triangle animation\" id=\"pullOutButton\"></span>\n      <div className=\"sidebar-header\">\n        <button type=\"button\" id=\"sidebarCollapse\" className=\"btn btn-info\" onClick={toggleSidebar}>\n          <i className=\"fas fa-align-justify\"></i>\n        </button>\n        <h3 className=\"logotext\">Ecstatica</h3>\n      </div>\n      <ul className=\"list-unstyled components\">\n        {tabItems}\n      </ul>\n    </nav>\n  )\n};\n\nSideBar.propTypes = {\n  tabsData: PropTypes.array\n};\n\nexport default SideBar;","import SideBar from './SideBar.jsx';\n\nexport default SideBar;","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport $ from 'jquery'\nimport {Link} from 'react-router-dom';\n\nconst ToolItem = ({toolData}) => {\n\n  const [icon, setIcon] = useState(toolData.icon)\n\n  const toggleIcon = (event, toolData) => {\n    const iconTag = $(event.target).find('i').addBack('i')\n    const currentIcon = iconTag && iconTag[0] && iconTag[0].innerHTML\n    if (currentIcon === toolData.icon) {\n      setIcon(toolData.iconHovered)\n    } else {\n      setIcon(toolData.icon)\n    }\n  }\n\n  return (\n    <li id={toolData.id} className=\"nav-item\" onClick={toolData.clickHandler}>\n      <Link to=\"#\" className=\"nav-link\">\n        <i \n          className=\"material-icons md-light md-36\" \n          onMouseEnter={(event) => toggleIcon(event, toolData)}\n          onMouseLeave={(event) => toggleIcon(event, toolData)}>\n          {icon}\n        </i>\n      </Link>\n    </li>\n  );\n};\n\nToolItem.propTypes = {\n  toolData: PropTypes.object\n};\n\nexport default ToolItem;","import React from 'react';\nimport {connect} from 'react-redux'\nimport {makeStyles} from '@material-ui/core/styles';\nimport {IconButton, Badge, MenuItem, Menu} from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport {updateUploadModalState} from './../../../../../../pages/Home/actions'\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  sectionDesktop: {\n    display: 'none',\n    float: 'right',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nconst UserTools = props => {\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = (event, uploaderModalStateDispatcher) => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n    if (event.currentTarget.innerText === 'Upload Image/s') {\n      uploaderModalStateDispatcher(true)\n    }\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={(event) => handleMenuClose(event, props.uploaderModalStateDispatcher)}>Upload Image/s</MenuItem>\n    </Menu>\n  );\n\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <div className={classes.sectionDesktop}>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon style={{width: '1.5em', height: '1.5em', top: '-5px', position: 'relative', right: '-2px'}} />\n          </Badge>\n        </IconButton>\n        <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n          <Badge badgeContent={17} color=\"secondary\">\n            <NotificationsIcon style={{width: '1.5em', height: '1.5em', top: '-5px', position: 'relative', right: '-2px'}} />\n          </Badge>\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"account of current user\"\n          aria-controls={menuId}\n          aria-haspopup=\"true\"\n          onClick={handleProfileMenuOpen}\n          color=\"inherit\"\n        >\n          <AccountCircle style={{width: '1.5em', height: '1.5em', top: '-5px', position: 'relative', right: '-2px'}} />\n        </IconButton>\n      </div>\n      <div className={classes.sectionMobile}>\n        <IconButton\n          aria-label=\"show more\"\n          aria-controls={mobileMenuId}\n          aria-haspopup=\"true\"\n          onClick={handleMobileMenuOpen}\n          color=\"inherit\"\n        >\n          <MoreIcon />\n        </IconButton>\n      </div>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = {\n  uploaderModalStateDispatcher: (uploadModalOpened) => updateUploadModalState(uploadModalOpened)\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(UserTools)","import React from 'react';\nimport $ from 'jquery'\nimport PropTypes from 'prop-types';\nimport ToolItem from './ToolItem/ToolItem';\nimport UserTools from './UserTools/UserTools';\n\nclass CommandAndUserTools extends React.Component {\n  constructor(props) {\n    super(props)\n    this.registerSpeechHandlers = this.registerSpeechHandlers.bind(this)\n    this.startSpeechRecognition = this.startSpeechRecognition.bind(this)\n    this.state = {\n      commandToolItemsData: [\n        {\n          id: 'btnFavorites',\n          icon: 'star_border',\n          iconHovered: 'star',\n          clickHandler: this.props.save\n        },\n        {\n          id: 'btnClearCommand',\n          icon: 'delete_outline',\n          iconHovered: 'delete',\n          clickHandler: this.props.reset\n        },\n        {\n          id: 'btnFireCommand',\n          icon: 'send',\n          iconHovered: 'send',\n          clickHandler: this.props.execute\n        },\n        {\n          id: 'btnSTTCommand',\n          icon: 'mic_none',\n          iconHovered: 'mic',\n          clickHandler: this.startSpeechRecognition\n        }\n      ]\n    }\n  }\n\n  componentDidMount() {\n    this.registerSpeechHandlers();\n  }\n\n  startSpeechRecognition() {\n    var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    if(isChrome) {\n      this.recognition.start();\n    } else {\n      // this.domOpsService.sho\n    }\n  }\n\n  registerSpeechHandlers() {\n    let SpeechRecognition\n    let instructions = $('#command')\n    try {\n      SpeechRecognition = window.SpeechRecognition || window.mozSpeechRecognition || window.msSpeechRecognition || window.webkitSpeechRecognition\n      // SpeechRecognition = ''\n      this.recognition = new SpeechRecognition()\n    }\n    catch(e) {\n      console.error(e);\n      $('.no-browser-support').show();\n      $('.app').hide();\n    }\n    this.recognition.onstart = function() { \n      instructions.val('Voice recognition activated. Try speaking into the microphone.');\n    }\n    \n    this.recognition.onspeechend = function() {\n      instructions.val('You were quiet for a while so voice recognition turned itself off.');\n    }\n    \n    this.recognition.onerror = function(event) {\n      if(event.error === 'no-speech') {\n        instructions.val('No speech was detected. Try again.');  \n      };\n    }\n\n    this.recognition.onresult = function(event) {\n      let noteContent = \"\";\n      let current = event.resultIndex;    \n      let transcript = event.results[current][0].transcript;\n      let mobileRepeatBug = (current === 1 && transcript === event.results[0][0].transcript);\n      if(!mobileRepeatBug) {\n        noteContent += transcript;\n        $('#command').val(noteContent);\n      }\n    }\n  }\n\n  // processRecastResponse(recastResponse: any) {\n  //   let bodyRelevant: any;\n  //   let intent: any = \"\";\n  //   let assuredIntentFactor = 0.6;\n  //   recastResponse.then((body) => {\n  //     bodyRelevant = body.results;\n  //     let intents = bodyRelevant ? bodyRelevant.intents : \"\";\n  //     if(intents) {\n  //       if(intents.length == 1) {\n  //         intent = intents[0];\n  //       } else if(intents.length > 1) {\n  //         let reducer = (probableIntent, currIntent) => probableIntent.confidence >= currIntent.confidence ? probableIntent : currIntent;\n  //         intent = intents.reduce(reducer, intents[0]);\n  //       } else {\n  //         this.domOpsService.showEmptyCommandMessage(\"Intent is either not Identified or is not supported, please try again with a different text.\");\n  //         return;\n  //       }\n  //       if (intent && intent.confidence > assuredIntentFactor) {\n  //         let intentSlug = intent.slug;\n  //         if (!Object.keys($config.intentSlugToOperations).includes(intentSlug)) {\n  //           this.domOpsService.showEmptyCommandMessage(\"Intent is either not Identified or is not supported, please try again with a different text.\");\n  //           return;\n  //         }\n  //         // $(`#${$config.constants.hiddenIntentFieldId}`).val(intent);\n  //         window.localStorage.setItem($config.constants.hiddenIntentFieldId, intentSlug);\n  //         this.domOpsService.displayIntentBox(intentSlug);\n  //         if (intentSlug == \"resethistory\") {\n  //           let card = this.cardsService.getResponseCard($config.intentSlugToOperations.resethistory.cardTitle, \n  //             $config.intentSlugToOperations.resethistory.cardMsg, {}, \"response\");\n  //           card.insertionCounter = 0;\n  //           let resetHistoryResponseAction = new ClearHistory(card);\n  //           this.store.dispatch(resetHistoryResponseAction);\n  //           return;\n  //         }\n  //         this.domOpsService.widgetIdentified.emit({widget: intentSlug, bodyRelevant: bodyRelevant});\n  //         this.domOpsService.populateRecastData(intentSlug, bodyRelevant);\n  //         // store.dispatch($config.intentSlugToOperations.addquery.action);\n  //       } else  {\n  //         this.domOpsService.showEmptyCommandMessage(\"Couldn't conform with the required confidence level of the intent match, please try again.\");\n  //       }\n  //     } else {\n  //       this.domOpsService.showEmptyCommandMessage(\"There seems to be an error in the Recast Response, as intents are not returned.\");\n  //       return;\n  //     }\n  //   });\n    \n  // }\n\n  render() {\n    const {commandToolItemsData} = this.state\n\n    const commandToolItems = commandToolItemsData && commandToolItemsData.map((toolData, index) => {\n      return <ToolItem toolData={toolData} key={index} />\n    })\n    return (\n      <div className=\"collapse navbar-collapse c-CommandAndUserTools\" id=\"navbarSupportedContent\">\n        <ul className=\"nav navbar-nav ml-auto c-commandTools\">\n          {commandToolItems}\n        </ul>\n        <UserTools />\n      </div>\n    );\n  }\n}\n\nCommandAndUserTools.propTypes = {\n  execute: PropTypes.func,\n  reset: PropTypes.func,\n  save: PropTypes.func\n};\n\nexport default CommandAndUserTools;","export default class ChatMessage {\n\n    constructor(message, isUser) {\n        this.message = message;\n        this.isUser = isUser;\n        this.timeStamp = Date.now();\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux'\nimport PropTypes from 'prop-types'\nimport $ from 'jquery'\nimport {toggleChatView, updateChatMessages} from './../../../../pages/Home/actions'\nimport CommandAndUserTools from './CommandAndUserTools/CommandAndUserTools';\nimport {Link} from 'react-router-dom';\nimport ChatMessage from './../../../../models/chatmessage.model'\n\nclass CommandPrompt extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      chatView: false\n    }\n    this.registerMouseAndKeyboardHandlers = this.registerMouseAndKeyboardHandlers.bind(this)\n    this.showContextMenu = this.showContextMenu.bind(this)\n    this.initiateDomOpsOnEnter = this.initiateDomOpsOnEnter.bind(this)\n    this.toggleChatView = this.toggleChatView.bind(this)\n    this.executeCommand = this.executeCommand.bind(this)\n    this.timerId = 0\n  }\n\n  componentDidMount() {\n    this.registerMouseAndKeyboardHandlers();\n  }\n\n  initiateDomOpsOnEnter(event, func, delay) {\n    const code = (event.keyCode ? event.keyCode : event.which);\n    if (code === 13) {\n      func();\n      clearTimeout(this.timerId)\n      return\n    }\n    clearTimeout(this.timerId)\n    this.timerId = setTimeout(func, delay)\n  }\n\n  saveToFavorites() {\n\n  }\n\n  resetCommand() {\n    $('#command').val('');\n    $('#command').focus();\n  }\n\n  registerMouseAndKeyboardHandlers() {\n    $('*').on('click', (event) => {\n      if(!this.contextMenuFirstDisplay) {\n        $(\"#inputSelectionContextMenu\").removeClass(\"show\").hide();\n        this.contextMenuDisplayed = false;\n      } else {\n        this.contextMenuFirstDisplay = false;\n      }\n    });\n  }\n\n  showContextMenu(event) {\n    if(this.contextMenuDisplayed === true) {\n      return;\n    }\n    var inputField = event.target;\n    if(inputField.value.length > 2 && inputField.selectionStart === 0 && inputField.selectionEnd === inputField.value.length) {\n      var top = event.pageY - 10;\n      var left = event.pageX - 90;\n      $(\"#inputSelectionContextMenu\").css({\n        display: \"block\",\n        top: top,\n        left: left\n      }).addClass(\"show\");\n      this.contextMenuFirstDisplay = true;\n      this.contextMenuDisplayed = true;\n    }\n  }\n\n  executeCommand() {\n    const commandField = $('#command')\n    commandField.toggleClass('loading')\n    // this.domOpsService.hideNonCards();\n    let commandVal = commandField.val();\n    const message = new ChatMessage(commandVal, true)\n    this.props.dispatchMessage(message)\n    // console.log(commandVal)\n    if(!commandVal) {\n      // this.domOpsService.showEmptyCommandMessage(this.emptyCommandMessage);\n    } else {\n      // let card = this.cardsService.getCommandCard($config.intentSlugToOperations.command.cardTitle, commandVal, {}, \"command\");\n      // let commandAction = new Command(card);\n      // this.store.dispatch(commandAction);\n      // const text = { text: commandVal };\n      // let recastResponse = this.recastOpsService.getRecastResponse(commandVal, text);\n      // this.processRecastResponse(recastResponse);\n    }\n  }\n\n  toggleChatView() {\n    this.setState({\n      chatView: !this.state.chatView\n    })\n    this.props.dispatchShowChatView(!this.state.chatView)\n  }\n\n  render() {\n    return (\n      <div id=\"header\" className=\"c-CommandPrompt headerprompt\" onDragEnd={this.showContextMenu}>\n        <div className=\"prompt\">\n          <p className=\"promptext\">$_</p>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"equalizer hide\" viewBox=\"0 0 80 80\">\n            <rect className=\"bar\" transform=\"translate(13,30)\"></rect>\n            <rect className=\"bar\" transform=\"translate(25,30)\"></rect>\n            <rect className=\"bar\" transform=\"translate(37,30)\"></rect>\n            <rect className=\"bar\" transform=\"translate(49,30)\"></rect>\n            <rect className=\"bar\" transform=\"translate(61,30)\"></rect>\n          </svg>\n        </div>\n        <nav className=\"navbar navbar-expand-lg navbar-light\">\n          <div className=\"container-fluid\">\n            <div className=\"c-iFieldContainer\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"What you need...\"\n                name=\"command\" id=\"command\" onKeyUp={(event) => this.initiateDomOpsOnEnter(event, this.executeCommand, 2000)}\n                onClick={this.showContextMenu} />\n              <button className=\"btn btn-primary\" onClick={this.toggleChatView}>{this.state.chatView ? 'Hide Chat' : 'Show Chat'}</button>\n            </div>\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" id=\"inputSelectionContextMenu\">\n              <Link to=\"#\" className=\"dropdown-item\" onClick={this.executeCommand}>Fire</Link>\n              <Link to=\"#\" className=\"dropdown-item\" onClick={this.resetCommand}>Clear</Link>\n              <Link to=\"#\" className=\"dropdown-item\" onClick={this.saveToFavorites}>Add to Favorites</Link>\n            </div>\n            <CommandAndUserTools execute={this.executeCommand} reset={this.resetCommand} save={this.saveToFavorites} />\n          </div>\n        </nav>\n        <input type=\"hidden\" id=\"intentHidden\" value=\"createissue\" />\n      </div>\n    );\n  }\n}\n\nCommandPrompt.props = {\n  dispatchMessage: PropTypes.func,\n  dispatchShowChatView: PropTypes.func\n}\n\nconst mapDispatchToProps = {\n  dispatchMessage: (message) => updateChatMessages(message),\n  dispatchShowChatView: (chatView) => toggleChatView(chatView)\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(CommandPrompt)","import CommandPrompt from './CommandPrompt';\n\nexport default CommandPrompt;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport { createPropsSelector } from 'reselect-immutable-helpers';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport {Zoom, Paper} from '@material-ui/core';\nimport { updateModalState } from '../../../../pages/Home/actions';\nimport { getModalState, getBackgroundImage } from '../../../../pages/Home/selectors';\n\nconst useStyles = makeStyles(theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: '85%',\n    height: '85%'\n  },\n  polygon: {\n    fill: theme.palette.common.white,\n    stroke: theme.palette.divider,\n    strokeWidth: 1,\n  },\n}));\n\nconst ImageViewer = props => {\n\n  const classes = useStyles();\n  return (\n    <div className=\"c-ImageViewer\">\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        open={props.modalState || false}\n        onClose={() => props.handleCloseDispatcher(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Zoom in={props.modalState || false}>\n          <Paper elevation={4} className={classes.paper}>\n            \n          </Paper>\n        </Zoom>\n      </Modal>\n    </div>\n  );\n};\n\nImageViewer.propTypes = {\n  handleCloseDispatcher: PropTypes.func,\n  modalState: PropTypes.bool,\n  selectedImage: PropTypes.string\n};\n\nconst mapStateToProps = createPropsSelector({\n  modalState: getModalState,\n  selectedImage: getBackgroundImage\n})\n\nconst mapDispatchToProps = {\n  handleCloseDispatcher: updateModalState\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ImageViewer)","import ImageViewer from './ImageViewer';\n\nexport default ImageViewer;","import React from 'react';\nimport ImageContainer from './ImageContainer';\nimport ImageViewer from './ImageViewer';\n\nconst PrincipalContent = props => {\n  return (\n    <div className='c-PrincipalContent'>\n      <ImageContainer />\n      <ImageViewer />\n    </div>\n  );\n};\n\nexport default PrincipalContent;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Dropzone extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hightlight: false };\n    this.fileInputRef = React.createRef();\n    this.openFileDialog = this.openFileDialog.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.onDragOver = this.onDragOver.bind(this);\n    this.onDragLeave = this.onDragLeave.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n\n  openFileDialog() {\n    if (this.props.disabled) return;\n    this.fileInputRef.current.click();\n  }\n\n  onFilesAdded(evt) {\n    if (this.props.disabled) return;\n    const files = evt.target.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n  }\n\n  fileListToArray(list) {\n    const array = [];\n    for (var i = 0; i < list.length; i++) {\n      array.push(list.item(i));\n    }\n    return array;\n  }\n\n  onDragOver(evt) {\n    evt.preventDefault();\n    if (this.props.disabled) return;\n    this.setState({ hightlight: true });\n  }\n\n  onDragLeave() {\n    this.setState({ hightlight: false });\n  }\n\n  onDrop(event) {\n    event.preventDefault();\n    if (this.props.disabled) return;\n    const files = event.dataTransfer.files;\n    if (this.props.onFilesAdded) {\n      const array = this.fileListToArray(files);\n      this.props.onFilesAdded(array);\n    }\n    this.setState({ hightlight: false });\n  }\n\n  render() {\n    return (\n      <div\n      className={`c-Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\n        onClick={this.openFileDialog}\n        onDragOver={this.onDragOver}\n        onDragLeave={this.onDragLeave}\n        onDrop={this.onDrop}\n        style={{ cursor: this.props.disabled ? \"default\" : \"pointer\" }}\n      >\n        <img\n          alt=\"upload\"\n          className=\"Icon\"\n          src=\"/images/cloud.jpg\"\n        />\n        <input\n          ref={this.fileInputRef}\n          className=\"FileInput\"\n          type=\"file\"\n          multiple\n          onChange={this.onFilesAdded}\n        />\n        <span>Upload Files</span>\n      </div>\n    );\n  }\n}\n\nDropzone.propTypes = {\n  onFilesAdded: PropTypes.func\n};\n\nexport default Dropzone;","import Dropzone from './Dropzone';\n\nexport default Dropzone;","import Progress from './Progress';\n\nexport default Progress;","import React, { Component } from 'react'\n\nclass Progress extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  render() {\n    return (\n      <div className=\"c-Progress\">\n        <div\n          className=\"Progress\"\n          style={{ width: this.props.progress + '%' }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Progress","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { createPropsSelector } from 'reselect-immutable-helpers';\nimport { withStyles } from '@material-ui/core/styles';\nimport { updateUploadModalState } from '../../../../pages/Home/actions';\nimport { getUploadModalState } from '../../../../pages/Home/selectors';\nimport Dropzone from './../Dropzone'\nimport Progress from '../Progress';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport { Zoom, Paper } from '@material-ui/core';\n\nconst styles = theme => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    width: '40%'\n  }\n})\n\nclass Uploader extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      files: [],\n      imageURI: [],\n      uploading: false,\n      uploadProgress: {},\n      successfullUploaded: false\n    };\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n    this.upload = this.upload.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n    this.renderActions = this.renderActions.bind(this);\n    this.renderProgress = this.renderProgress.bind(this);\n    this.compressAndUploadFiles = this.compressAndUploadFiles.bind(this);\n    this.compress = this.compress.bind(this);\n  }\n\n  onFilesAdded(files) {\n    this.setState(prevState => ({\n      files: prevState.files.concat(files)\n    }));\n  }\n\n  renderProgress(file) {\n    const uploadProgress = this.state.uploadProgress[file.name];\n    if (this.state.uploading || this.state.successfullUploaded) {\n      return (\n        <div className=\"ProgressWrapper\">\n          <Progress progress={uploadProgress ? uploadProgress.percentage : 0} />\n          <img\n            className=\"CheckIcon\"\n            alt=\"done\"\n            src=\"/images/cloud.jpg\"\n            style={{\n              opacity:\n                uploadProgress && uploadProgress.state === \"done\" ? 0.5 : 0\n            }}\n          />\n        </div>\n      );\n    }\n  }\n\n  renderActions() {\n    if (this.state.successfullUploaded) {\n      return (\n        <button onClick={() => this.setState({ files: [], successfullUploaded: false })}>\n          Clear\n        </button>\n      );\n    } else {\n      return (\n        <button\n          disabled={this.state.files.length < 0 || this.state.uploading}\n          onClick={() => this.compressAndUploadFiles(this.uploadFile)}\n        >\n          Upload\n        </button>\n      );\n    }\n  }\n\n  compressAndUploadFiles() {\n    this.state.files.forEach((file) => {\n      this.compress(file).then((result) => {\n        this.setState({ uploadProgress: {}, uploading: true });\n          this.upload(result)\n      })\n    })\n  }\n\n  compress(file) {\n    return new Promise((resolve, reject) => {\n      const width = 500;\n      const height = 300;\n      const fileName = file.name;\n      const reader = new FileReader();\n      const fileVariants = []\n      reader.onload = event => {\n        const img = new Image();\n        img.src = event.target.result;\n        img.onload = () => {\n          fileVariants.push(file)\n          const elem = document.createElement('canvas');\n          elem.width = width;\n          elem.height = height;\n          const ctx = elem.getContext('2d');\n          // img.width and img.height will contain the original dimensions\n          ctx.drawImage(img, 0, 0, width, height);\n          ctx.canvas.toBlob((blob1) => {\n            fileVariants.push(new File([blob1], `${fileName.split('.')[0]}_compressed_60.${fileName.split('.')[1]}`, {\n              type: 'image/jpeg',\n              lastModified: Date.now()\n            }))\n            ctx.canvas.toBlob((blob2) => {\n              fileVariants.push(new File([blob2], `${fileName.split('.')[0]}_compressed_20.${fileName.split('.')[1]}`, {\n                type: 'image/jpeg',\n                lastModified: Date.now()\n              }))\n              resolve(fileVariants)\n            }, 'image/jpeg', 0.2)\n          }, 'image/jpeg', 0.6)\n        }\n      }\n      reader.onerror = error => console.log(error);\n      reader.readAsDataURL(file);\n    })\n  }\n\n  async upload(files) {\n    this.setState({ uploadProgress: {}, uploading: true });\n    const promises = [];\n    promises.push(this.sendRequest(files));\n    try {\n      await Promise.all(promises).then(result => console.log('result === ' + result)).catch(err => console.log('error === ' + err));\n      this.setState({ successfullUploaded: true, uploading: false });\n    } catch (e) {\n      // Not Production ready! Do some error handling here instead...\n      this.setState({ successfullUploaded: true, uploading: false });\n    }\n  }\n\n  sendRequest(files) {\n    return new Promise((resolve, reject) => {\n      const formData = new FormData();\n      files.forEach((file) => {\n        formData.append(\"file\", file, file.name);\n      })\n      fetch('http://localhost:3001/upload', {\n        method: 'post',\n        body: formData\n      })\n      .then(response => response.json())\n      .then(jsonData => resolve(console.log(jsonData)))\n      .catch(err => reject(err))\n    });\n  }\n\n  render() {\n    const { classes, modalState, handleCloseDispatcher } = this.props\n    return (\n      <div className=\"c-Uploader\">\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modal}\n          open={modalState || false}\n          onClose={() => handleCloseDispatcher(false)}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Zoom in={modalState || false}>\n            <Paper elevation={4} className={classes.paper}>\n              <span className=\"Title\">Upload Files</span>\n              <div className=\"Content\">\n                <div>\n                  <Dropzone\n                    onFilesAdded={this.onFilesAdded}\n                    disabled={this.state.uploading || this.state.successfullUploaded}\n                  />\n                </div>\n                <div className=\"Files\">\n                  {this.state.files.map(file => {\n                    return (\n                      <div key={file.name} className=\"Row\">\n                        <span className=\"Filename\">{file.name}</span>\n                        {this.renderProgress(file)}\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n              <div className=\"Actions\">\n                {this.renderActions()}\n              </div>\n            </Paper>\n          </Zoom>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nUploader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleCloseDispatcher: PropTypes.func,\n  modalState: PropTypes.bool\n};\n\nconst mapStateToProps = createPropsSelector({\n  modalState: getUploadModalState\n})\n\nconst mapDispatchToProps = {\n  handleCloseDispatcher: updateUploadModalState\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(Uploader))","import React from 'react';\n\nconst ChatCard = ({chat}) => {\n\n  const classes = ['c-ChatCard', chat.isUser ? 'rightFloater' : ''].join(' ')\n  return (\n    <div className={classes}>\n      <p>{chat.text}</p>\n    </div>\n  );\n};\n\nChatCard.propTypes = {\n\n};\n\nexport default ChatCard;","import ChatCard from './ChatCard';\n\nexport default ChatCard;","import React from 'react';\nimport {connect} from 'react-redux';\nimport PropTypes from 'prop-types';\nimport {createPropsSelector} from 'reselect-immutable-helpers';\nimport {getChatViewStatus} from './../../../pages/Home/selectors'\nimport ChatCard from './../ChatCard'\n\nconst ChatView = props => {\n\n  const classes1 = ['c-ChatView', props.chatView ? 'pad' : ''].join(' ')\n  const classes2 = ['c-display flex', props.chatView ? 'show' : ''].join(' ')\n\n  const chats = [\n    {\n      isUser: false,\n      text: \"Do something\"\n    },\n    {\n      isUser: true,\n      text: \"Do something else\"\n    },\n    {\n      isUser: true,\n      text: \"Try againg\"\n    },\n    {\n      isUser: false,\n      text: \"Got response from server\"\n    },\n    {\n      isUser: true,\n      text: \"13 images found\"\n    },\n    {\n      isUser: false,\n      text: \"Find colorful images\"\n    }\n  ]\n\n  const chatCards = chats && chats.map(chat => {\n    return <ChatCard chat={chat} />\n  })\n  return (\n    <div className={classes1}>\n      <div className={classes2}>\n        {chatCards}\n      </div>\n    </div>\n  );\n};\n\nChatView.propTypes = {\n  chatView: PropTypes.bool\n};\n\nconst mapStateToProps = createPropsSelector({\n  chatView: getChatViewStatus\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ChatView)","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\n\nimport * as actions from './actions'\nimport {getBackgroundImage} from './selectors'\n\nimport Sidebar from '../../components/molecules/SideBar'\nimport CommandPrompt from '../../components/molecules/common/CommandPrompt'\nimport PrincipalContent from '../../components/molecules/PrincipalContent/PrincipalContent';\nimport Uploader from '../../components/molecules/common/Uploader/Uploader';\nimport ChatView from '../../components/molecules/ChatView/ChatView';\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props)\n        this.pageType = 'home'\n    }\n\n    componentDidMount() {\n        const {initializeHome} = this.props\n        initializeHome()\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <div className=\"c-background\" style={{backgroundImage: `url(${this.props.backgroundImage})`}} />\n                <Sidebar />\n                <CommandPrompt />\n                <ChatView />\n                <PrincipalContent />\n                <Uploader />\n            </div>\n        )\n    }\n}\n\nHome.propTypes = {\n    backgroundImage: PropTypes.string,\n    initializeHome: PropTypes.func\n}\n\nconst mapStateToProps = createPropsSelector({\n    backgroundImage: getBackgroundImage\n})\n\nconst mapDispatchToProps = {\n    initializeHome: actions.initializeHome\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Home)\n","import Home from './Home.jsx';\n\nexport default Home;","import {createSelector} from 'reselect'\nimport {createGetSelector} from 'reselect-immutable-helpers'\n\nconst getData = ({data}) => data\n\nexport const getHome = createSelector(\n    getData,\n    (dataState) => {\n        return dataState.pages.home\n    }\n)\n\nexport const getBackgroundImage = createGetSelector(getHome, 'backgroundImage')\nexport const getModalState = createGetSelector(getHome, 'modalOpened')\nexport const getUploadModalState = createGetSelector(getHome, 'uploadModalOpened')\nexport const getFormValues = createGetSelector(getHome, 'formValues')\nexport const getFormErrors = createGetSelector(getHome, 'formErrors')\nexport const getImages = createGetSelector(getHome, 'images')\nexport const getChatViewStatus = createGetSelector(getHome, 'chatView')\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ImageHeader = props => {\n  const image = props.image\n  return (\n    <div className=\"c-ImageHeader\">\n      <div className=\"avatar\" style={{backgroundImage: `url(${image.imageUrl})`}} />\n    </div>\n  );\n};\n\nImageHeader.propTypes = {\n  image: PropTypes.object\n};\n\nexport default ImageHeader","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux'\n\nimport {updateBackground} from './../../../../../pages/Home/actions'\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport ImageHeader from './ImageHeader/ImageHeader';\n\nconst useStyles = makeStyles({\n  card: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 140,\n  },\n});\n\nconst Image = props => {\n  const image = props.image\n  const classes = useStyles()\n  const [img, setImg] = useState('')\n\n  useEffect(() => {\n      var base64Flag = 'data:image/jpeg;base64,';\n      var imageStr = arrayBufferToBase64(image.img.data.data);\n      const img = base64Flag + imageStr\n      image.img.imageUrl = img\n      setImg(img)\n  }, [image.img.data.data, image.img.imageUrl])\n\n  const arrayBufferToBase64 = (buffer) => {\n    var binary = '';\n    var bytes = [].slice.call(new Uint8Array(buffer));\n    bytes.forEach((b) => binary += String.fromCharCode(b));\n    return window.btoa(binary);\n  };\n  \n  // console.log(img)\n  return (\n    <Card className={`${classes.card} c-Image`} onClick={() => props.updateBackgroundDispatcher(img)}>\n      <CardHeader avatar={<ImageHeader image={image.img} />} title={image.img.name} style={{textTransform: 'capitalize'}} />\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={img}\n          title={image.img.name}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {image.img.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {image.img.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Like\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          More\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nImage.propTypes = {\n  image: PropTypes.object,\n  updateBackgroundDispatcher: PropTypes.func\n};\n\nconst  mapDispatchToProps = {\n  updateBackgroundDispatcher: updateBackground\n}\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Image)","import Image from './Image';\n\nexport default Image;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux'\nimport {createPropsSelector} from 'reselect-immutable-helpers'\nimport {getImages} from './../../../../pages/Home/selectors'\nimport ImageCard from './Image'\n// import Image from './../../../../models/image.model'\n\nclass ImageContainer extends React.Component {\n\n  render() {\n    const {images} = this.props\n    const imageRenders = images && images.map((image, index) => {\n      return <ImageCard image={image} key={index} />\n    })\n    return (\n      <div className=\"container-fluid c-ImageContainer\">\n        <div className=\"row c-Images\">\n          {imageRenders}\n        </div>\n      </div>\n    );\n  }\n}\n\nImageContainer.propTypes = {\n  images: PropTypes.array\n};\n\nconst mapStateToProps = createPropsSelector({\n  images: getImages\n})\n\nexport default connect(\n  mapStateToProps,\n  null\n)(ImageContainer)","import ImageContainer from './ImageContainer';\n\nexport default ImageContainer;"],"sourceRoot":""}